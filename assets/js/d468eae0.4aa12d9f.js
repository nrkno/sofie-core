"use strict";(self.webpackChunksofie_documentation=self.webpackChunksofie_documentation||[]).push([[4476],{5318:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var n=r(7378);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,y=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(y,a(a({ref:t},l),{},{components:r})):n.createElement(y,a({ref:t},l))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1861:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(5773),o=(r(7378),r(5318));const i={},a="TSR Types",s={unversionedId:"for-developers/device-integrations/tsr-types",id:"for-developers/device-integrations/tsr-types",title:"TSR Types",description:"The TSR monorepo contains a types package called timeline-state-resolver-types. The intent behind this package is that you may want to generate a Timeline in a place where you don't want to import the TSR library for performance reasons. Blueprints are a good example of this since the webpack setup does not deal well with importing everything.",source:"@site/docs/for-developers/device-integrations/tsr-types.md",sourceDirName:"for-developers/device-integrations",slug:"/for-developers/device-integrations/tsr-types",permalink:"/sofie-core/docs/for-developers/device-integrations/tsr-types",draft:!1,editUrl:"https://github.com/nrkno/sofie-core/edit/master/packages/documentation/docs/for-developers/device-integrations/tsr-types.md",tags:[],version:"current",frontMatter:{},sidebar:"forDevelopers",previous:{title:"TSR Integration API",permalink:"/sofie-core/docs/for-developers/device-integrations/tsr-api"},next:{title:"Applications & Libraries",permalink:"/sofie-core/docs/for-developers/libraries"}},p={},c=[{value:"What you should know about this",id:"what-you-should-know-about-this",level:2}],l={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tsr-types"},"TSR Types"),(0,o.kt)("p",null,"The TSR monorepo contains a types package called ",(0,o.kt)("inlineCode",{parentName:"p"},"timeline-state-resolver-types"),". The intent behind this package is that you may want to generate a Timeline in a place where you don't want to import the TSR library for performance reasons. Blueprints are a good example of this since the webpack setup does not deal well with importing everything."),(0,o.kt)("h2",{id:"what-you-should-know-about-this"},"What you should know about this"),(0,o.kt)("p",null,"When the TSR is built the types for the Mappings, Options and Actions for your integration will be auto generated under ",(0,o.kt)("inlineCode",{parentName:"p"},"src/generated"),". In addition to this you should describe the content property of the timeline objects in a file using interfaces. If you're adding a new integration also add it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"DeviceType")," enum as described in ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts"),"."))}u.isMDXComponent=!0}}]);