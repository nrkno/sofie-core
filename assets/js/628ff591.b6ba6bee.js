"use strict";(self.webpackChunksofie_documentation=self.webpackChunksofie_documentation||[]).push([[5920],{93107:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=n(62540),s=n(43023);const a={},r="Input Gateway",o={id:"user-guide/installation/installing-input-gateway",title:"Input Gateway",description:"The Input Gateway handles control devices that are not capable of running a Web Browser. This allows Sofie to integrate directly with devices such as: Hardware Panels, GPI input, MIDI devices and external systems being able to send an HTTP Request.",source:"@site/docs/user-guide/installation/installing-input-gateway.md",sourceDirName:"user-guide/installation",slug:"/user-guide/installation/installing-input-gateway",permalink:"/sofie-core/docs/user-guide/installation/installing-input-gateway",draft:!1,unlisted:!1,editUrl:"https://github.com/nrkno/sofie-core/edit/master/packages/documentation/docs/user-guide/installation/installing-input-gateway.md",tags:[],version:"current",frontMatter:{},sidebar:"userGuide",previous:{title:"Media Manager",permalink:"/sofie-core/docs/user-guide/installation/media-manager"},next:{title:"Sofie Core: System Configuration",permalink:"/sofie-core/docs/user-guide/configuration/sofie-core-settings"}},l={},c=[{value:"Supported devices and protocols",id:"supported-devices-and-protocols",level:2},{value:"Input Gateway-specific functions",id:"input-gateway-specific-functions",level:2},{value:"Shift Registers",id:"shift-registers",level:3},{value:"Further Reading",id:"further-reading",level:3}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"input-gateway",children:"Input Gateway"}),"\n",(0,i.jsx)(t.p,{children:"The Input Gateway handles control devices that are not capable of running a Web Browser. This allows Sofie to integrate directly with devices such as: Hardware Panels, GPI input, MIDI devices and external systems being able to send an HTTP Request."}),"\n",(0,i.jsxs)(t.p,{children:["To install it, begin by downloading the latest release of ",(0,i.jsx)(t.a,{href:"https://github.com/nrkno/sofie-input-gateway/releases",children:"Input Gateway from GitHub"}),". You can now run the ",(0,i.jsx)(t.code,{children:"input-gateway.exe"})," file inside the extracted folder. A warning window may popup about the app being unrecognized. You can get around this by selecting ",(0,i.jsx)(t.em,{children:"More Info"})," and clicking ",(0,i.jsx)(t.em,{children:"Run Anyways"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Much like ",(0,i.jsx)(t.a,{href:"./installing-package-manager",children:"Package Manager"}),", the Sofie instance that Input Gateway needs to connect to is configured through command line arguments. A minimal configuration could look something like this."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"input-gateway.exe --host <Core Host Name> --port <Core HTTP(S) port> --https --id <Peripheral Device Id> --token <Peripheral Device Token/Password>\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If not connecting over HTTPS, remove the ",(0,i.jsx)(t.code,{children:"--https"})," flag."]}),"\n",(0,i.jsxs)(t.p,{children:["Input Gateway can be launched from ",(0,i.jsx)(t.a,{href:"./installing-connections-and-additional-hardware/casparcg-server-installation#installing-the-casparcg-launcher",children:"CasparCG Launcher"}),". This will make management and log collection easier on a production system."]}),"\n",(0,i.jsxs)(t.p,{children:["You can now open the ",(0,i.jsx)(t.em,{children:"Sofie\xa0Core"}),", ",(0,i.jsx)(t.code,{children:"http://localhost:3000"}),",  and navigate to the ",(0,i.jsx)(t.em,{children:"Settings page"}),". You will see your ",(0,i.jsx)(t.em,{children:"Input Gateway"})," under the ",(0,i.jsx)(t.em,{children:"Devices"})," section of the menu. In ",(0,i.jsx)(t.em,{children:"Input Devices"})," you can add devices that this instance of Input Gateway should handle. Some of the device integrations will allow you to customize the Feedback behavior. The ",(0,i.jsx)(t.em,{children:"Device ID"})," property will identify a given Input Device in the Studio, so this property can be used for fail-over purposes."]}),"\n",(0,i.jsx)(t.h2,{id:"supported-devices-and-protocols",children:"Supported devices and protocols"}),"\n",(0,i.jsx)(t.p,{children:"Currently, input gateway supports:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Stream Deck panels"}),"\n",(0,i.jsxs)(t.li,{children:["Skaarhoj panels - ",(0,i.jsx)(t.em,{children:"TCP Raw Panel"})," mode"]}),"\n",(0,i.jsx)(t.li,{children:"X-Keys panels"}),"\n",(0,i.jsx)(t.li,{children:"MIDI controllers"}),"\n",(0,i.jsx)(t.li,{children:"OSC"}),"\n",(0,i.jsx)(t.li,{children:"HTTP"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"input-gateway-specific-functions",children:"Input Gateway-specific functions"}),"\n",(0,i.jsx)(t.h3,{id:"shift-registers",children:"Shift Registers"}),"\n",(0,i.jsxs)(t.p,{children:["Input Gateway supports the concept of ",(0,i.jsx)(t.em,{children:"Shift Registers"}),". A Shift Register is an internal variable/state that can be modified using Actions, from within ",(0,i.jsx)(t.a,{href:"/sofie-core/docs/user-guide/configuration/settings-view#actions",children:"Action Triggers"}),". This allows for things such as pagination, ",(0,i.jsx)(t.em,{children:"Hold Shift + Another Button"})," scenarios, and others on input devices that don't support these features natively. ",(0,i.jsx)(t.em,{children:"Shift Registers"})," are also global for all devices attached to a single Input Gateway. This allows combining multiple Input devices into a single Control Surface."]}),"\n",(0,i.jsxs)(t.p,{children:["When one of the ",(0,i.jsx)(t.em,{children:"Shift Registers"})," is set to a value other than ",(0,i.jsx)(t.code,{children:"0"})," (their default state), all triggers sent from that Input Gateway become prefixed with a serialized state of the state registers, making the combination of a ",(0,i.jsx)(t.em,{children:"Shift Registers"})," state and a trigger unique."]}),"\n",(0,i.jsx)(t.p,{children:"If you would like to have the same trigger cause the same action in various Shift Register states, add multiple Triggers to the same Action, with different Shift Register combinations."}),"\n",(0,i.jsx)(t.p,{children:"Input Gateway supports an unlimited number of Shift Registers, Shift Register numbering starts at 0."}),"\n",(0,i.jsx)(t.h3,{id:"further-reading",children:"Further Reading"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/nrkno/sofie-input-gateway/releases",children:"Input Gateway Releases on GitHub"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/nrkno/sofie-input-gateway",children:"Input Gateway GitHub Page for Developers"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},43023:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(63696);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);