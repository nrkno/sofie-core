"use strict";(self.webpackChunksofie_documentation=self.webpackChunksofie_documentation||[]).push([[5569],{5318:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return t?o.createElement(f,i(i({ref:n},u),{},{components:t})):o.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2731:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var o=t(5773),r=t(808),a=(t(7378),t(5318)),i=["components"],s={sidebar_position:2},l="Quick install",p={unversionedId:"user-guide/installation/installing-sofie-server-core",id:"user-guide/installation/installing-sofie-server-core",title:"Quick install",description:"Installing for testing \\(or production\\)",source:"@site/docs/user-guide/installation/installing-sofie-server-core.md",sourceDirName:"user-guide/installation",slug:"/user-guide/installation/installing-sofie-server-core",permalink:"/sofie-core/docs/user-guide/installation/installing-sofie-server-core",editUrl:"https://github.com/nrkno/sofie-core/edit/master/packages/documentation/docs/user-guide/installation/installing-sofie-server-core.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"userGuide",previous:{title:"Getting Started",permalink:"/sofie-core/docs/user-guide/installation/intro"},next:{title:"Initial Sofie Core Setup",permalink:"/sofie-core/docs/user-guide/installation/initial-sofie-core-setup"}},u={},c=[{value:"Installing for testing (or production)",id:"installing-for-testing-or-production",level:2},{value:"<strong>Prerequisites</strong>",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:3},{value:"Tips for running in production",id:"tips-for-running-in-production",level:3},{value:"Installing for Development",id:"installing-for-development",level:2}],d={toc:c};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-install"},"Quick install"),(0,a.kt)("h2",{id:"installing-for-testing-or-production"},"Installing for testing ","(","or production",")"),(0,a.kt)("h3",{id:"prerequisites"},(0,a.kt)("strong",{parentName:"h3"},"Prerequisites")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"(","Linux",")")," Install ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/install/linux/docker-ce/ubuntu/"},"Docker")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-install-docker-compose-on-ubuntu-18-04"},"docker-compose"),".",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"(","Windows",")")," Install ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/editions/community/docker-ce-desktop-windows"},"Docker for Windows"),"."),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"This docker-compose file automates the basic setup of the ",(0,a.kt)("a",{parentName:"p",href:"../../for-developers/libraries#main-application"},"Sofie-Core application"),", the backend database and different Gateway options."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# This is NOT recommended to be used for a production deployment.\n# It aims to quickly get an evaluation version of Sofie running and serve as a basis for how to set up a production deployment.\nversion: '3.3'\nservices:\n  db:\n    hostname: mongo\n    image: mongo:4.2.18\n    restart: always\n    entrypoint: ['/usr/bin/mongod', '--replSet', 'rs0', '--bind_ip_all']\n    # the healthcheck avoids the need to initiate the replica set\n    healthcheck:\n      test: test $$(echo \"rs.initiate().ok || rs.status().ok\" | mongo --quiet) -eq 1\n      interval: 10s\n      start_period: 30s\n    ports:\n      - '27017:27017'\n    volumes:\n      - db-data:/data/db\n    networks:\n      - sofie\n\n  core:\n    hostname: core\n    image: sofietv/tv-automation-server-core:release37\n    restart: always\n    ports:\n      - '3000:3000' # Same port as meteor uses by default\n    environment:\n      PORT: '3000'\n      MONGO_URL: 'mongodb://db:27017/meteor'\n      MONGO_OPLOG_URL: 'mongodb://db:27017/local'\n      ROOT_URL: 'http://localhost:3000'\n    networks:\n      - sofie\n    volumes:\n      - snapshots:/mnt/snapshots\n    depends_on:\n      - db\n\n  playout-gateway:\n    image: sofietv/tv-automation-playout-gateway:release37\n    restart: always\n    command: yarn start -host core -port 3000 -id playoutGateway0\n    networks:\n      - sofie\n      - lan_access\n    depends_on:\n      - core\n\n  # Choose one of the following images, depending on which type of ingest gateway is wanted.\n  # If using the Rundown Editor, then none of the below images are needed.\n  # The Rundown Editor can be found here: https://github.com/SuperFlyTV/sofie-automation-rundown-editor\n\n  # spreadsheet-gateway:\n  #   image: superflytv/sofie-spreadsheet-gateway:latest\n  #   restart: always\n  #   command: yarn start -host core -port 3000 -id spreadsheetGateway0\n  #   networks:\n  #     - sofie\n  #   depends_on:\n  #     - core\n\n  # mos-gateway:\n  #   image: sofietv/tv-automation-mos-gateway:release37\n  #   restart: always\n  #   ports:\n  #     - \"10540:10540\" # MOS Lower port\n  #     - \"10541:10541\" # MOS Upper port\n  #     # - \"10542:10542\" # MOS query port - not used\n  #   command: yarn start -host core -port 3000 -id mosGateway0\n  #   networks:\n  #     - sofie\n  #   depends_on:\n  #     - core\n\n  # inews-gateway:\n  #   image: tv2media/inews-ftp-gateway:1.37.0-in-testing.20\n  #   restart: always\n  #   command: yarn start -host core -port 3000 -id inewsGateway0\n  #   networks:\n  #     - sofie\n  #   depends_on:\n  #     - core\n\nnetworks:\n  sofie:\n  lan_access:\n    driver: bridge\n\nvolumes:\n  db-data:\n  snapshots:\n")),(0,a.kt)("p",null,"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"Sofie")," folder, copy the above content, and save it as ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," within the ",(0,a.kt)("inlineCode",{parentName:"p"},"Sofie")," folder."),(0,a.kt)("p",null,"Navigate to the ",(0,a.kt)("em",{parentName:"p"},"ingest-gateway")," section of ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," and select which type of ",(0,a.kt)("em",{parentName:"p"},"ingest-gateway")," you'd like installed by uncommenting it. Save your changes. If you are using the ",(0,a.kt)("a",{parentName:"p",href:"rundown-editor"},"Rundown Editor"),", then no ingest gateways need to be uncommented."),(0,a.kt)("p",null,"Then open a terminal, ",(0,a.kt)("inlineCode",{parentName:"p"},"cd your-sofie-folder")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo docker-compose up")," ","(","just ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose up")," on Windows",")","."),(0,a.kt)("p",null,"Once the installation is done, Sofie should be running on ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3000"},"http://localhost:3000")),(0,a.kt)("p",null,"Next, you will need to install a Rundown Gateway. Visit ",(0,a.kt)("a",{parentName:"p",href:"installing-a-gateway/rundown-or-newsroom-system-connection/intro"},"Rundowns\xa0&\xa0Newsroom Systems")," to see which ",(0,a.kt)("em",{parentName:"p"},"Rundown Gateway")," is best suited for ",(0,a.kt)("em",{parentName:"p"},"your")," production environment."),(0,a.kt)("h3",{id:"tips-for-running-in-production"},"Tips for running in production"),(0,a.kt)("p",null,"There are some things not covered in this guide needed to run ",(0,a.kt)("em",{parentName:"p"},"Sofie")," in a production environment:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Logging: Collect, store and track error messages. ",(0,a.kt)("a",{parentName:"li",href:"https://www.elastic.co/kibana"},"Kibana")," and ",(0,a.kt)("a",{parentName:"li",href:"https://www.elastic.co/logstash"},"logstash")," is one way to do it."),(0,a.kt)("li",{parentName:"ul"},"NGINX: It is customary to put a load-balancer in front of ",(0,a.kt)("em",{parentName:"li"},"Sofie","\xa0","Core"),"."),(0,a.kt)("li",{parentName:"ul"},"Memory and CPU usage monitoring.")),(0,a.kt)("h2",{id:"installing-for-development"},"Installing for Development"),(0,a.kt)("p",null,"Installation instructions for installing Sofie-Core or the various gateways are available in the README file in their respective github repos."),(0,a.kt)("p",null,"Common prerequisites are ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js")," and ",(0,a.kt)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Yarn"),".",(0,a.kt)("br",{parentName:"p"}),"\n","Links to the repos are listed at ",(0,a.kt)("a",{parentName:"p",href:"../../for-developers/libraries"},"Applications & Libraries"),"."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/nrkno/sofie-core"},(0,a.kt)("em",{parentName:"a"},"Sofie","\xa0","Core")," GitHub Page for Developers")))}m.isMDXComponent=!0}}]);