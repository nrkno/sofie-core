title: Root
description: Root schemas for websocket subscriptions
$defs:
  reqid:
    type: integer
    description: Client originated ID reflected in response message.
  ping:
    type: object
    title: PingEvent
    properties:
      event:
        type: string
        const: ping
      reqid:
        $ref: '#/$defs/reqid'
    required: [event, reqid]
    additionalProperties: false
    examples:
      - event: ping
        reqid: 27
  pong:
    type: object
    title: PongEvent
    properties:
      event:
        type: string
        const: pong
      reqid:
        $ref: '#/$defs/reqid'
    required: [event, reqid]
    additionalProperties: false
    examples:
      - event: pong
        reqid: 27
  heartbeat:
    type: object
    title: HeartbeatEvent
    properties:
      event:
        type: string
        const: heartbeat
    required: [event]
    additionalProperties: false
    examples:
      - event: heartbeat
  subscribe:
    type: object
    title: SubscribeEvent
    properties:
      event:
        type: string
        const: subscribe
      reqid:
        $ref: '#/$defs/reqid'
      subscription:
        type: object
        title: SubscribeSubscription
        properties:
          name:
            $ref: '#/$defs/name'
        required: [name]
        additionalProperties: false
    required: [event, reqid, subscription]
    additionalProperties: false
    examples:
      - event: subscribe
        reqid: 27
        subscription:
          name: studio
  unsubscribe:
    type: object
    title: UnsubscribeEvent
    properties:
      event:
        type: string
        const: unsubscribe
      reqid:
        $ref: '#/$defs/reqid'
      subscription:
        type: object
        title: UnsubscribeSubscription
        properties:
          name:
            $ref: '#/$defs/name'
        required: [name]
        additionalProperties: false
    required: [event, reqid, subscription]
    additionalProperties: false
    examples:
      - event: unsubscribe
        reqid: 27
        subscription:
          name: studio
  subscriptionStatus:
    type: object
    title: SubscriptionStatus
    oneOf:
      - $ref: '#/$defs/subscriptionStatusError'
      - $ref: '#/$defs/subscriptionStatusSuccess'
    # additionalProperties: false
    examples:
      - $ref: '#/$defs/subscriptionStatusCommon/examples/0'
  subscriptionStatusError:
    title: SubscriptionStatusError
    allOf:
      - properties:
          errorMessage:
            type: string
        required: [errorMessage]
        additionalProperties: false
      - $ref: '#/$defs/subscriptionStatusCommon'
    examples:
      - errorMessage: 'Subscribe to studio topic failed'
        $ref: '#/$defs/subscriptionStatusCommon/examples/0'
  subscriptionStatusSuccess:
    title: SubscriptionStatusSuccess
    allOf:
      - $ref: '#/$defs/subscriptionStatusCommon'
  subscriptionStatusCommon:
    type: object
    properties:
      event:
        type: string
        const: subscriptionStatus
      reqid:
        $ref: '#/$defs/reqid'
      subscription:
        type: object
        title: SubscriptionDetails
        properties:
          name:
            $ref: '#/$defs/name'
          status:
            $ref: '#/$defs/status'
        required: [name, status]
        additionalProperties: false
    required: [event, reqid, subscription]
    additionalProperties: false
    examples:
      - event: subscriptionStatus
        reqid: 27
        subscription:
          name: studio
          status: subscribed
  name:
    type: string
    title: SubscriptionName
    description: The name of the topic related to this status.
    enum:
      - studio
      - activePlaylist
      - activePieces
      - segments
      - adLibs
      - buckets
      - packages
  status:
    type: string
    title: SubscriptionStatus
    description: The current status of the subscription
    enum:
      - subscribed
      - unsubscribed
